//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CajeroEntities : DbContext
    {
        public CajeroEntities()
            : base("name=CajeroEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CajeroSaldo> CajeroSaldoes { get; set; }
        public virtual DbSet<CuentaSaldo> CuentaSaldoes { get; set; }
        public virtual DbSet<Usuario> Usuarios { get; set; }
    
        public virtual ObjectResult<GetSaldo_Result> GetSaldo(Nullable<int> numeroCuenta)
        {
            var numeroCuentaParameter = numeroCuenta.HasValue ?
                new ObjectParameter("NumeroCuenta", numeroCuenta) :
                new ObjectParameter("NumeroCuenta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSaldo_Result>("GetSaldo", numeroCuentaParameter);
        }
    
        public virtual ObjectResult<GetCuenta_Result> GetCuenta(Nullable<int> noCuenta)
        {
            var noCuentaParameter = noCuenta.HasValue ?
                new ObjectParameter("NoCuenta", noCuenta) :
                new ObjectParameter("NoCuenta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCuenta_Result>("GetCuenta", noCuentaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SaldoTotalCajero()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SaldoTotalCajero");
        }
    
        public virtual ObjectResult<GetALLCajero_Result> GetALLCajero()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetALLCajero_Result>("GetALLCajero");
        }
    
        public virtual int UpdateSaldoCajero(Nullable<int> idBillete, Nullable<int> cantidadBilletes)
        {
            var idBilleteParameter = idBillete.HasValue ?
                new ObjectParameter("IdBillete", idBillete) :
                new ObjectParameter("IdBillete", typeof(int));
    
            var cantidadBilletesParameter = cantidadBilletes.HasValue ?
                new ObjectParameter("CantidadBilletes", cantidadBilletes) :
                new ObjectParameter("CantidadBilletes", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateSaldoCajero", idBilleteParameter, cantidadBilletesParameter);
        }
    
        public virtual int UpdateSaldoCliente(Nullable<int> numeroCuenta, Nullable<int> saldoActual)
        {
            var numeroCuentaParameter = numeroCuenta.HasValue ?
                new ObjectParameter("NumeroCuenta", numeroCuenta) :
                new ObjectParameter("NumeroCuenta", typeof(int));
    
            var saldoActualParameter = saldoActual.HasValue ?
                new ObjectParameter("SaldoActual", saldoActual) :
                new ObjectParameter("SaldoActual", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateSaldoCliente", numeroCuentaParameter, saldoActualParameter);
        }
    
        public virtual ObjectResult<GetCuentaTranferir_Result> GetCuentaTranferir(Nullable<int> numeroCuentaReceptora)
        {
            var numeroCuentaReceptoraParameter = numeroCuentaReceptora.HasValue ?
                new ObjectParameter("NumeroCuentaReceptora", numeroCuentaReceptora) :
                new ObjectParameter("NumeroCuentaReceptora", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCuentaTranferir_Result>("GetCuentaTranferir", numeroCuentaReceptoraParameter);
        }
    
        public virtual int Transferencia(Nullable<int> numeroCuentaEmisora, Nullable<int> numeroCuentaReceptora, Nullable<int> saldoEmisor, Nullable<int> saldoReceptor)
        {
            var numeroCuentaEmisoraParameter = numeroCuentaEmisora.HasValue ?
                new ObjectParameter("NumeroCuentaEmisora", numeroCuentaEmisora) :
                new ObjectParameter("NumeroCuentaEmisora", typeof(int));
    
            var numeroCuentaReceptoraParameter = numeroCuentaReceptora.HasValue ?
                new ObjectParameter("NumeroCuentaReceptora", numeroCuentaReceptora) :
                new ObjectParameter("NumeroCuentaReceptora", typeof(int));
    
            var saldoEmisorParameter = saldoEmisor.HasValue ?
                new ObjectParameter("SaldoEmisor", saldoEmisor) :
                new ObjectParameter("SaldoEmisor", typeof(int));
    
            var saldoReceptorParameter = saldoReceptor.HasValue ?
                new ObjectParameter("SaldoReceptor", saldoReceptor) :
                new ObjectParameter("SaldoReceptor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Transferencia", numeroCuentaEmisoraParameter, numeroCuentaReceptoraParameter, saldoEmisorParameter, saldoReceptorParameter);
        }
    }
}
